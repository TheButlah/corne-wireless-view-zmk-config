/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keypos_42keys.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMB_L LH2 LH1 LH0
#define THUMB_R RH0 RH1 RH2

/* &mt {
    tapping-term-ms = <200>;
}; */

/ {
    behaviors {
        hm_l: homerow_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";                      // hold if other key pressed and released while this one is pressed
            tapping-term-ms = <250>;                  // hold after this time
            quick-tap-ms = <250>;                     // produces tap if double tapped sooner than this
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R>;    // right-hand keys
        };

        hm_r: homerow_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";                      // hold if other key pressed and released while this one is pressed
            tapping-term-ms = <250>;                  // produces hold only if other key tapped and released sooner than this
            quick-tap-ms = <250>;                     // produces tap if double tapped sooner than this
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L>;    // left-hand keys
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q         &kp W         &kp E          &kp R           &kp T        &kp Y    &kp U           &kp I          &kp O         &kp P            &kp BSPC
&kp LCTRL  &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LSHIFT F  &kp G        &kp H    &hm_r LSHIFT J  &hm_r LCTRL K  &hm_r LALT L  &hm_r LGUI SEMI  &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C          &kp V           &kp B        &kp N    &kp M           &kp COMMA      &kp DOT       &kp FSLH         &kp LSHIFT
                                       &kp LGUI       &mo 2           &kp SPACE    &kp RET  &mo 3           &mt LALT ESC
            >;
        };

        gaming_layer {
            display-name = "Gaming";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O    &kp P          &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMICOLON  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH       &to 0
                          &kp RALT  &mo 2  &kp SPACE    &kp RET  &mo 3  &mt LGUI ESC
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Number";
            bindings = <
&kp TAB    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp DEL
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none   &none
&kp LSHFT  &bt BT_CLR    &none         &none         &none         &none           &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &to 1   &kp LSHIFT
                                       &trans        &trans        &trans          &trans    &trans     &trans
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbol";
            bindings = <
&kp TAB    &kp EXCL       &kp AT         &kp HASH        &kp DLLR         &kp PRCNT    &kp CARET  &kp AMPS            &kp KP_MULTIPLY   &kp LPAR         &kp RPAR         &kp DEL
&kp LCTRL  &hm_l LGUI F1  &hm_l LALT F2  &hm_l LCTRL F3  &hm_l LSHIFT F4  &kp F5       &kp MINUS  &hm_r LSHIFT EQUAL  &hm_r LCTRL LBKT  &hm_r LALT RBKT  &hm_r LGUI BSLH  &kp GRAVE
&kp LSHFT  &kp F6         &kp F7         &kp F8          &kp F9           &kp F10      &kp UNDER  &kp PLUS            &kp LBRC          &kp RBRC         &kp PIPE         &kp TILDE
                                         &trans          &trans           &trans       &trans     &trans              &trans
            >;
        };
    };
};
